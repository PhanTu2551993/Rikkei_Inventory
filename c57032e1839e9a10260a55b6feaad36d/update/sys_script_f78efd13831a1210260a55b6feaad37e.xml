<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1568427_inventor_borrowrequests</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1568427_inventor_borrowrequests">status=approved^EQ<item display_value="Approved" endquery="false" field="status" goto="false" newquery="false" operator="=" or="false" value="approved"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>borrowHistory</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    var item_id = current.item_id;
    if (!item_id) {
        gs.error("Item ID is missing. Cannot create transaction history.");
        return;
    }

    var gr = new GlideRecord('x_1568427_inventor_transaction_history');  
    gr.initialize();
    gr.action_by = current.sys_created_by; 
    gr.quantity_changed = -Math.abs(current.borrower_quantity); 
    gr.type = 'borrowed'; 
    gr.item_id = item_id; 
    gr.item_id = item_id; 
    gr.time = current.sys_created_on; 

    var item = new GlideRecord('x_1568427_inventor_item'); 
    if (item.get(item_id)) {
        gr.remarks = item.remarks || ''; 
        gr.item_name = item.item_name || ''; 
        gr.description = 'Confirm Borrowed'; 
		gr.quantity_old = item.quantity; 
		gr.quantity_new = item.current_quantity;
    } else {
        gs.warn("Item with ID " + item_id + " not found in x_1568427_inventor_item.");
    }
    gr.insert();
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-11 08:44:37</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f78efd13831a1210260a55b6feaad37e</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>borrowHistory</sys_name>
        <sys_overrides/>
        <sys_package display_value="Inventory Management" source="x_1568427_inventor">c57032e1839e9a10260a55b6feaad36d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Inventory Management">c57032e1839e9a10260a55b6feaad36d</sys_scope>
        <sys_update_name>sys_script_f78efd13831a1210260a55b6feaad37e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-12 08:22:55</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f78efd13831a1210260a55b6feaad37e"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>f78efd13831a1210260a55b6feaad37e</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-11 08:44:36</sys_created_on>
        <sys_id>d5214617831a1210260a55b6feaad308</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-11 08:44:36</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
